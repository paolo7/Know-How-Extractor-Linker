package db;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.Statement;
import java.util.Properties;

public class DatabaseConnectorDerby implements DatabaseConnector{

    private String framework = "embedded";
    private String driver = "org.apache.derby.jdbc.EmbeddedDriver";
    private String protocol = "jdbc:derby:";
    private String dbName = "integrationData"; 
    private Connection conn = null;
    private PreparedStatement psInsert = null;
    private int batchInsertOrder = 0;
	public DatabaseConnectorDerby(){
		
	}
	@Override
	public void storeMap(String synset, String source, String entity) {
		if(conn == null){
			System.out.println("DATA - ERROR: before storing data it is necessary to open the connection");
		} else if(psInsert == null){
			System.out.println("DATA - ERROR: prepared statement has not been initialised");
		} else {
			try {
				psInsert.setString(1+(batchInsertOrder*3), synset);
				psInsert.setString(2+(batchInsertOrder*3), source);
				psInsert.setString(3+(batchInsertOrder*3), entity);
				batchInsertOrder++;
				if(batchInsertOrder == 1000){
					batchInsertOrder = 0;
		            psInsert.executeUpdate();
		            conn.commit();
				}
	            //System.out.println("Inserted row: ["+synset+", "+source+", "+entity+"]");
			} catch(SQLIntegrityConstraintViolationException e) {
				// do nothing, as this is just a duplicated row
			}
			catch (SQLException e) {
				System.out.println("DATA - ERROR: failed to store a row in the synsetmap");
				e.printStackTrace();
			}
		}
	}
	
	/*			INSERT INTO TwoColumnTable VALUES
    (1, 'first row'),
    (2, 'second row'),
    (3, 'third row')*/
	@Override
	public void open() {
		loadDriver();
		Properties props = new Properties(); 
		try {
			// Connect to the database (and create it if it does not exist)
			conn = DriverManager.getConnection(protocol + dbName
			        + ";create=true", props);
			System.out.println("DATA - Connected to database " + dbName);
			conn.setAutoCommit(false);
			// Create table if it does not exist
			Statement s = conn.createStatement();
			try {
				s.execute("create table synsetmap(synset varchar(4095) NOT NULL, source varchar(4095) NOT NULL, entity varchar(4095) NOT NULL, PRIMARY KEY (synset, entity))");
				conn.commit();
				System.out.println("DATA - Created synsetmap table as it did not exist.");
			} catch( SQLException e ) {
				if(e.getSQLState().equals("X0Y32")) {
					System.out.println("DATA - synsetmap table already exists");
					int count = 0;
					ResultSet res = s.executeQuery("SELECT COUNT(*) FROM synsetmap");
					while (res.next()){
						count = res.getInt(1);
					}
					System.out.println("Number of rows: "+count);
				  }
				else {
					System.out.println("DATA - ERROR while creating the synset map");
					printSQLException(e);
				}
		    }	
			try {
				s.execute("create index synsetindex on synsetmap(synset)");
				conn.commit();
				System.out.println("DATA - Created synsetindex index as it did not exist.");
			} catch( SQLException e ) {
				if(e.getSQLState().equals("X0Y32"))
					System.out.println("DATA - synsetindex index table already exists");
					
				else {
					System.out.println("DATA - ERROR while creating the synsetindex index");
					printSQLException(e);
				}
		    }	
			try {
				s.execute("create index synsetsourceindex on synsetmap(synset, source)");
				conn.commit();
				System.out.println("DATA - Created synsetsourceindex index as it did not exist.");
			} catch( SQLException e ) {
				if(e.getSQLState().equals("X0Y32"))
					System.out.println("DATA - synsetsourceindex index table already exists");
					
				else {
					System.out.println("DATA - ERROR while creating the synsetsourceindex index");
					printSQLException(e);
				}
		    }	
			psInsert = conn.prepareStatement(
                    "insert into synsetmap values	
					
			s.close();
			
			
			/*
			Statement s = conn.createStatement();
			s.executeQuery(sql)
	            statements.add(s);

	            // We create a table...
	            s.execute("create table location(num int, addr varchar(40))");
	            System.out.println("Created table location");*/
			
			
	            
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
	}
	
	public void forceCommit(){
		try {
			conn.commit();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	@Override
	public void close() {
		try
        {
            // the shutdown=true attribute shuts down Derby
            DriverManager.getConnection("jdbc:derby:;shutdown=true");

            // To shut down a specific database only, but keep the
            // engine running (for example for connecting to other
            // databases), specify a database in the connection URL:
            //DriverManager.getConnection("jdbc:derby:" + dbName + ";shutdown=true");
        }
        catch (SQLException se)
        {
            if (( (se.getErrorCode() == 50000)
                    && ("XJ015".equals(se.getSQLState()) ))) {
                // we got the expected exception
                System.out.println("Derby shut down normally");
                // Note that for single database shutdown, the expected
                // SQL state is "08006", and the error code is 45000.
            } else {
                // if the error code or SQLState is different, we have
                // an unexpected exception (shutdown failed)
                System.err.println("Derby did not shut down normally");
                printSQLException(se);
            }
        }
	}
	
	/**
     * Loads the appropriate JDBC driver for this environment/framework. For
     * example, if we are in an embedded environment, we load Derby's
     * embedded Driver, <code>org.apache.derby.jdbc.EmbeddedDriver</code>.
     */
    private void loadDriver() {
        try {
            Class.forName(driver).newInstance();
            System.out.println("Loaded the appropriate driver");
        } catch (ClassNotFoundException cnfe) {
            System.err.println("\nUnable to load the JDBC driver " + driver);
            System.err.println("Please check your CLASSPATH.");
            cnfe.printStackTrace(System.err);
        } catch (InstantiationException ie) {
            System.err.println(
                        "\nUnable to instantiate the JDBC driver " + driver);
            ie.printStackTrace(System.err);
        } catch (IllegalAccessException iae) {
            System.err.println(
                        "\nNot allowed to access the JDBC driver " + driver);
            iae.printStackTrace(System.err);
        }
    }
    
    public static void printSQLException(SQLException e)
    {
        // Unwraps the entire exception chain to unveil the real cause of the
        // Exception.
        while (e != null)
        {
            System.err.println("\n----- SQLException -----");
            System.err.println("  SQL State:  " + e.getSQLState());
            System.err.println("  Error Code: " + e.getErrorCode());
            System.err.println("  Message:    " + e.getMessage());
            // for stack traces, refer to derby.log or uncomment this:
            //e.printStackTrace(System.err);
            e = e.getNextException();
        }
    }
	@Override
	public void storeMap(String synset, String entity) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public ResultSet getAllTables() {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public ResultSet getAllEntitiesInTable(String tableName) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public int countAllEntitiesInTable(String tableName) {
		// TODO Auto-generated method stub
		return 0;
	}
	@Override
	public void dropTable(String tableName) {
		// TODO Auto-generated method stub
		
	}


}
